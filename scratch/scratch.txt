Game plan for making this a single package / set of standalone scripts

Specify a parcels shapefile, a corresponding assessor table, the parcel IDs and parcel and
owner addresses, the tracts shapefile, a tract identifier, and output file names.
This seems like too much for command line arguments, but could maybe be arguments to a method, 
and then to do multiple years at a time you'd have some outer file calling this in a loop.

Join the assessor table to the parcels shapefile.  Print out how many of the table 
records were joined.

After the parcel join, generate the parcel centroids and spatial join to get each 
parcel's containing tract as an attribute of those centroids.  Print how many of
the parcel centroid were successfully spatial joined.

Run the centroids table through address matching so it gets classified. Join the 
classified table back up with the centroids geometries, if necessary.  

Do the tract joins stuff to count the numbers of parcels per classification in each
neighborhood and write that to a csv.

Also do the flow edges stuff, counting tract-to-tract ownership patterns.

#-------------- Tasks --------------#

1) do the "setup": get all files in a good folder structure, set up code with a main class 
and the method headers that are needed, maybe comments and examples, without actually writing 
any new code yet

2) write code for the first part (joins and centroids), locating appropriate geospatial
libraries and methods, test for edge cases of original files -> joined centroids

3) link up the joined centroids process with address matching, reconfigure as needed to achieve
original files -> classified parcel centroids

4) write code for the tract joins stuff to get original files -> tract counts

5) link up the flow edges code so that the flow edges are an output as well.

6) stencil out how the full method could be called multiple times in a loop for various years,
with some convention for file names
